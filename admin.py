from aiogram import Router, F
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import (
    Message, InlineKeyboardMarkup,
    InlineKeyboardButton, CallbackQuery
)

from config_read import config
from db.sqlite import insert_product

router = Router()


class Product(StatesGroup):
    choose_category = State()
    choose_name = State()
    choose_price = State()
    choose_characteristics = State()
    choose_photo = State()


def get_tool():
    button = [
        [InlineKeyboardButton(text="–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –ø—Ä–æ–¥—É–∫—Ç", callback_data="edit_product")]
    ]

    return InlineKeyboardMarkup(inline_keyboard=button)


def get_catalog():
    buttons = [
        [
            InlineKeyboardButton(text='üì± –¢–µ–ª–µ—Ñ–æ–Ω—ã –∏ ‚åö –≥–∞–¥–∂–µ—Ç—ã', callback_data='choose_phone_gadgets'),
            InlineKeyboardButton(text='üè† –ë—ã—Ç–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞', callback_data='choose_appliances')
        ],
        [
            InlineKeyboardButton(text='üîä –ê—É–¥–∏–æ, üìπ –í–∏–¥–µ–æ', callback_data='choose_periphery'),
            InlineKeyboardButton(text='üíª –ö–æ–º–ø—å—é—Ç–µ—Ä—ã', callback_data='choose_computers')
        ],
        [
            InlineKeyboardButton(text='üì∫ –¢–µ–ª–µ–≤–∏–∑–æ—Ä—ã', callback_data='edit_tv'),
            InlineKeyboardButton(text='üß∞ –°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–æ –∏ —Ä–µ–º–æ–Ω—Ç', callback_data="choose_tools")
        ],
        [
            InlineKeyboardButton(text='‚¨áÔ∏è –ï—â–µ', callback_data='more')
        ]
    ]
    keyboard = InlineKeyboardMarkup(inline_keyboard=buttons)

    return keyboard


def get_catalog_phone():
    buttons = [
        [
            InlineKeyboardButton(text='üì± –°–º–∞—Ä—Ç—Ñ–æ–Ω—ã', callback_data='edit_phone'),
            InlineKeyboardButton(text='‚åö –°–º–∞—Ä—Ç —á–∞—Å—ã', callback_data='edit_watch')
        ],
        [
            InlineKeyboardButton(text='üîå –ê–¥–∞–ø—Ç–µ—Ä—ã', callback_data='edit_charger'),
            InlineKeyboardButton(text='üì≤ –ß–µ—Ö–ª—ã', callback_data="edit_case")
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=buttons)

def isAdmin(user_id):
    return user_id == int(config.admin_id.get_secret_value())


@router.message(Command("admin"))
async def admin(message: Message):
    if isAdmin(message.from_user.id):
        await message.answer(text="–ê–¥–º–∏–Ω—Å–∫–∏–π —Ä–µ–∂–∏–º:", reply_markup=get_tool())
    else:
        await message.answer("–í–∞—à –∑–∞–ø—Ä–æ—Å –Ω–µ–≤–µ—Ä–Ω—ã–π")

@router.callback_query(F.data == "edit_product")
async def choose_catalog(callback: CallbackQuery):
    await callback.message.answer(text="–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø—Ä–æ–¥—É–∫—Ç–∞:", reply_markup=get_catalog())
    await callback.answer()


@router.callback_query(F.data.startswith("choose"))
async def choose_catalog(callback: CallbackQuery):
    if callback.data.endswith("phone_gadget"):
        await callback.message.answer(text="–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –ø—Ä–æ–¥—É–∫—Ç–∞:", reply_markup=get_catalog_phone())
    await callback.answer()


@router.callback_query(F.data.startswith("edit"))
async def choose_sub_catalog(callback: CallbackQuery, state: FSMContext):
    if callback.data.endswith("phone"):
        await state.update_data(choose_category="phones")
        await callback.message.answer(text="–î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞...\n–í–≤–µ–¥–∏—Ç–µ –∏–º—è")
    elif callback.data.endswith("watch"):
        await state.update_data(choose_category="watch")
        await callback.message.answer(text="–ü–æ–∫–∞ —á—Ç–æ —Ç—É—Ç –Ω–∏—á–µ–≥–æ –Ω–µ—Ç—É :(")
    await state.set_state(Product.choose_name)
    await callback.answer()


@router.message(Product.choose_name)
async def get_name(message: Message, state: FSMContext):
    await state.update_data(choose_name=message.text)
    await message.answer(text="–£–∫–∞–∂–∏—Ç–µ —Ü–µ–Ω—É: ")
    await state.set_state(Product.choose_price)


@router.message(Product.choose_price)
async def get_price(message: Message, state: FSMContext):
    await state.update_data(choose_price=message.text)
    await message.answer(text="–ù–∞–ø–∏—à–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: ")
    await state.set_state(Product.choose_characteristics)


@router.message(Product.choose_characteristics)
async def get_characteristics(message: Message, state: FSMContext):
    await state.update_data(choose_characteristics=message.text)
    await message.answer(text="–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ")
    await state.set_state(Product.choose_photo)


@router.message(Product.choose_photo)
async def get_photo(message: Message, state: FSMContext):
    await state.update_data(choose_photo=message.photo[-1].file_id)
    product = await state.get_data()
    await message.answer("–ü–æ–∑–¥—Ä–∞–≤–ª—è—é –≤—Å–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ ü•≥")
    await insert_product(product["choose_category"], product["choose_name"], product["choose_price"], product["choose_characteristics"], product["choose_photo"])
    await state.clear()

